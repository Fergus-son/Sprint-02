{"ast":null,"code":"import React from'react';import s from'./Message.module.css';// нужно создать правильный тип вместо any\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";// нужно отобразить приходящие данные\nconst Message=props=>{return/*#__PURE__*/_jsxs(\"div\",{id:'hw1-message-'+props.message.id,className:s.message,children:[/*#__PURE__*/_jsxs(\"div\",{className:s.imageAndText,children:[/*#__PURE__*/_jsxs(\"div\",{className:s.text,children:[/*#__PURE__*/_jsx(\"div\",{id:'hw1-name-'+props.message.id,className:s.name,children:props.message.user.name}),/*#__PURE__*/_jsx(\"pre\",{id:'hw1-text-'+props.message.id,className:s.messageText,children:props.message.message.text})]}),/*#__PURE__*/_jsx(\"img\",{id:'hw1-avatar-'+props.message.id// создаёт студент\n,src:props.message.user.avatar//\n})]}),/*#__PURE__*/_jsx(\"div\",{id:'hw1-time-'+props.message.id,className:s.time,children:props.message.message.time})]});};export default Message;","map":{"version":3,"names":["React","s","jsx","_jsx","jsxs","_jsxs","Message","props","id","message","className","children","imageAndText","text","name","user","messageText","src","avatar","time"],"sources":["/Users/user/Desktop/coding/Sprint-02/HW/src/s2-homeworks/hw01/message/Message.tsx"],"sourcesContent":["import React from 'react'\nimport s from './Message.module.css'\nimport { MessageType } from '../HW1'\n\n// нужно создать правильный тип вместо any\nexport type MessagePropsType = {\n    message: MessageType\n}\n\n// нужно отобразить приходящие данные\nconst Message = (props: MessagePropsType) => {\n    return (\n        <div id={'hw1-message-' + props.message.id} className={s.message}>\n            <div className={s.imageAndText}>\n                <div className={s.text}>\n                    <div id={'hw1-name-' + props.message.id} className={s.name}>\n                        {/*создаёт студент*/}\n                        {props.message.user.name}\n                        {/**/}\n                    </div>\n                    <pre id={'hw1-text-' + props.message.id} className={s.messageText}>\n                        {/*создаёт студент*/}\n                        {props.message.message.text}\n                        {/**/}\n                    </pre>\n                </div>\n                <img\n                    id={'hw1-avatar-' + props.message.id}\n                    // создаёт студент\n                    src={props.message.user.avatar}\n                //\n                />\n            </div>\n            <div id={'hw1-time-' + props.message.id} className={s.time}>\n                {/*создаёт студент*/}\n                {props.message.message.time}\n                {/**/}\n            </div>\n        </div>\n    )\n}\n\nexport default Message\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,MAAO,CAAAC,CAAC,KAAM,sBAAsB,CAGpC;AAAA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAKA;AACA,KAAM,CAAAC,OAAO,CAAIC,KAAuB,EAAK,CACzC,mBACIF,KAAA,QAAKG,EAAE,CAAE,cAAc,CAAGD,KAAK,CAACE,OAAO,CAACD,EAAG,CAACE,SAAS,CAAET,CAAC,CAACQ,OAAQ,CAAAE,QAAA,eAC7DN,KAAA,QAAKK,SAAS,CAAET,CAAC,CAACW,YAAa,CAAAD,QAAA,eAC3BN,KAAA,QAAKK,SAAS,CAAET,CAAC,CAACY,IAAK,CAAAF,QAAA,eACnBR,IAAA,QAAKK,EAAE,CAAE,WAAW,CAAGD,KAAK,CAACE,OAAO,CAACD,EAAG,CAACE,SAAS,CAAET,CAAC,CAACa,IAAK,CAAAH,QAAA,CAEtDJ,KAAK,CAACE,OAAO,CAACM,IAAI,CAACD,IAAI,CAEvB,CAAC,cACNX,IAAA,QAAKK,EAAE,CAAE,WAAW,CAAGD,KAAK,CAACE,OAAO,CAACD,EAAG,CAACE,SAAS,CAAET,CAAC,CAACe,WAAY,CAAAL,QAAA,CAE7DJ,KAAK,CAACE,OAAO,CAACA,OAAO,CAACI,IAAI,CAE1B,CAAC,EACL,CAAC,cACNV,IAAA,QACIK,EAAE,CAAE,aAAa,CAAGD,KAAK,CAACE,OAAO,CAACD,EAClC;AAAA,CACAS,GAAG,CAAEV,KAAK,CAACE,OAAO,CAACM,IAAI,CAACG,MAC5B;AAAA,CACC,CAAC,EACD,CAAC,cACNf,IAAA,QAAKK,EAAE,CAAE,WAAW,CAAGD,KAAK,CAACE,OAAO,CAACD,EAAG,CAACE,SAAS,CAAET,CAAC,CAACkB,IAAK,CAAAR,QAAA,CAEtDJ,KAAK,CAACE,OAAO,CAACA,OAAO,CAACU,IAAI,CAE1B,CAAC,EACL,CAAC,CAEd,CAAC,CAED,cAAe,CAAAb,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}